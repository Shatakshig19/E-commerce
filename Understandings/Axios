# Axios ke main functions:
1) reduces repition of base urls
2) no need to convert response in json format
3) catch errors in one place
4) supports async/await syntax thus more cleaner code
5) add tokens as well


 # In your e-commerce project, the API is a set of backend routes (URLs) that the frontend (React) uses to communicate with the backend (Express & MongoDB).


# An API request is when the frontend asks the backend to get, create, update, or delete data.

# Types of API Requests (HTTP Methods)
GET → Fetch data (e.g., get all products)
POST → Send data (e.g., add a product to cart)
PUT/PATCH → Update data (e.g., update user profile)
DELETE → Remove data (e.g., remove product from cart)

# How HTTP Requests Work in Your E-Commerce Project
1️⃣ Frontend (React) sends an HTTP request to http://localhost:5000/api/products
2️⃣ Backend (Express) processes the request and fetches data from MongoDB
3️⃣ Backend sends an HTTP response back to React with product data
4️⃣ Frontend updates UI with the received data



📱 Frontend (React)          🌐 API (Backend - Express.js)       🗄 Database (MongoDB)
-------------------------------------------------------------
  1️⃣ User clicks "View Products"
       ⬇️ (Sends GET request)
    
      axios.get("/api/products")
       ⬇️
-------------------------------------------------------------
  2️⃣ Express backend receives the request
       ⬇️  (Processes it)
    
      app.get("/api/products", async (req, res) => {
         const products = await Product.find(); // Fetch from MongoDB
         res.json(products); // Send response
      });
       ⬇️
-------------------------------------------------------------
  3️⃣ Database (MongoDB) returns products
       ⬇️
    
      [{ id: 1, name: "Shoes", price: 999 }, { id: 2, name: "T-Shirt", price: 499 }]
       ⬇️
-------------------------------------------------------------
  4️⃣ Backend sends response to frontend
       ⬇️
    
      Response: JSON data with products
       ⬇️
-------------------------------------------------------------
  5️⃣ React updates UI with products

      useEffect(() => {
         axios.get("/api/products")
            .then(response => setProducts(response.data));
      }, []);

      🖥 UI shows: 
      🛒 Shoes - ₹999
      👕 T-Shirt - ₹499
-------------------------------------------------------------


✅ Jo frontend me likha URL hota hai (/api/products) wahi endpoint hota hai, jo backend ke kisi function se linked hota hai.
✅ Backend database se data fetch karke frontend ko bhejta hai.
✅ Axios ka kaam hai request bhejna aur response lena.
